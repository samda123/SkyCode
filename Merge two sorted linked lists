 static SinglyLinkedListNode mergeLists(SinglyLinkedListNode head1, SinglyLinkedListNode head2) {
        if(head1==null)return head2;
        if(head2==null)return head1;
        if(head1.data<=head2.data)
        {
            head1.next=mergeLists(head1.next,head2);
            return head1;
        }
        else
        {
            head2.next=mergeLists(head1,head2.next);
            return head2;
        }



####C++
SinglyLinkedListNode* mergeLists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2)
{   SinglyLinkedListNode* start,last;
    if(head1==nullptr){return head2;}
    if(head2==nullptr){return head1;}
{
    if(head1->data <= head2->data)
    start=head1;
    else
    {start=head2;}
}
last=start;

while(head1!= nullptr && head2!= nullptr)
{   
    if(head1->data <= head2->data)
    last->next=head1;
    last=head1;
    head1=head1->next;

    else{
    last->next=head1;
    last=head1;
    head1=head1->next;
    }
}
    if(head1!=nullptr)
    last->next=head1;
    if(head2!=nullptr)
    last->next=head2;

return start;
}

